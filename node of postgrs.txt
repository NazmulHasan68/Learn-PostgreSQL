===============================================================================================
======================================= PostgreSQL ============================================
===============================================================================================

section : 01
=============
1. What is database?
    --> An organised collection of data, A method to mainpulate and access the data.

2. Database Vs BDMS (PostgreSQL, MySQL, Oracle)

3. What is RDBMS?
    --> A Type of database system that store data instrucred tables (using rows and colums)
        and sQL for manging and querying data

4. SQL Vs PostgreSQL
    --> SQL = structured Query Language which is used to talk to our database

5. Installtion : 
    Password : 3580
    port : 5432

    -01. \list || \l == For check All the database
    -02. |!cls == for clear all database
    -03. create database <name you database> == for create a database
    -04. /c test  === switch database from shell

6. DB vs Schema vs tables





section : 02
=============

    1. Database 
        -> creating , connect , listing, droping
    2.  a. create - new tabale
        b. Read - how to Read
        c. update - data
        d. Delete data
    -05. SELECT datname FROM pg_databse 
    -06. Drop database <db_name>  == for delete existing database
    -07. a. Create a new tables  ================================================//
            => CREATE TABLE person(
                id INT,
                name VACHAER(100),
                city VACHAER(100)
            );

         create table person(id int, name VACHAER(100), city VACHAER(100));
    -08. \d == go to table

    -09.  b. Adding data into a table
            => INSERT INTO person(id , name, city) ================================================//
            INSERT into students values (101, 'raju', 'Dhaka');
    -10. c. Modify /update data from a table
            => UPDATE person ================================================//
                    SET city = 'London'
                    WHERE id = 1;
    -11 d. DELETE data from a table
            => DELETE FROM students ================================================//
                WHERE name = 'Raju';
        


section : 03
=============
    . Datatypes  => An attribute that specifies the type of data in a column of our databse - table
                        . Numeric   - Int Double float decimal
                        . string    - varchar
                        . Data      - DATE 
                        . Boolean   - Boolean
            q/a -- Datatypes = what will happend we store values like 15.35?
                    .DECIMAL(5, 2) -5= Total digit -2= after point two digit
                -- Constraint : A constraint in PostgreSQL is a rule applied to column
                    . the primary key constraint uniquely identifies each record in a table
                    . primary keys must contain UNIQUE values, and cannot contain NULL values
                    . A table can have Only primary key
                -12. -- NOT NULL 
                    => Create table customers ( ================================================//
                        id int not null,
                        name varchar(100) not null
                    )
                -13. DEFAULT values
                    => CREATE TABLE customers (
                        acc_no int primary key,
                        name varchar(100) NOT NULL,
                        acc_type varchar(50) not null Default 'savings'
                    );
                -14. AUTO_increment 
                    => create table employes (
                            emp_id SERIAL primary key,
                            fname varchar(100) NOT NULL,
                            lname varchar(100) NOT NULL,
                            email varchar(100) NOT NULL UNIQUE,
                            dept varcher(100),
                            salary DECIMAL(10,2) DEFAULT 30000.00,
                            hire_date DATE not null deefault current_Date
                        );


    . Constraint
        . Primary key
        . NOT NULL
        . Default
        . Serial
        . Unique

============================( TASK -1 : Create New Table) ===================================
    



section : 04
=============
    . clauses 
        . WHERE
        . Distinct
        . Order By
        . Limit
        . Like

    we have relational operators 
        . < - less than
        . > - Greater than
        . <= - Less than or equal to
        . >= - Greater than or Equal to
        . = Equal to
        . != Not equal to
    Logical operators 
        . AND - both must be true
        . Or - if one correct than return true
    some other operators
        . In (multiple or operators)
        . NOT In (revace in)
    BETWEEN 
        . salary BETWEEN 4000 and 5000
    Distinct    
        . find Unique value
    ORDER By
        . select * from employees order by fname 
        . select * from employees order by fname desc
    LIMIT 
        . select * from employees LIMIT 3;
    LIKE 
        . select * from employees where dept like '%Acc%'
        . Sarts with 'A' : LIKE 'A%'
        . Ends with 'A' : LIKE '%A'
        . Contains 'A' : Like '%A%'
        . second character is 'A' : LIKE '_A%'
        . Case-insensitive contains 'johon' : ILIKE '%johon%'
        . select * from employees where dept like '__';


section : 05
=============
    Aggregate Function => we can calculate

    . How to find total no.of employees
    . Employee with Max salary
    . Average salary of employees

    01. count =>  select count(emp_id) from employees;
    02. sum => select sum(salary) from employees;
    03. Avg => select avg(salary) from employees;
    04. min => select min(salary) from employees;
    05. max => select max(salary) from employees;


section : 06
=============
       What is GROUP BY?

       select dept from employees GROUP BY dept
       select dept , count(fname) from employees GROUP BY dept
       select dept, sum(salary) from employees group by dept;



section : 07
=============
        String Functions
            . CONCAT, CONCAT_WS
            . SUBSTER
            . LEFT, RIGHT
            . LENGTH
            . UPPER, LOWER
            . TRIM, LTRIM, RTRIM
            . REPLACE
            . POSITION
            . STRING_AGG
    1. CONCAT = > CONCAT(FIRST_COL, SEC_COL) // SELECT EMP_ID, CONCAT(FNAME, LNAME) AS FULLNAME , DEPT FROM EMPLOYEES;
    2. SUBSTRING = > SELECT SUBSTRING('HEY BUDDY', 1, 4) //SELECT SUBSTR('HELLO BODY!', 1,6);
    3. REPLACE => HEY BUDDY - HEY=HELLO --> HELLO BUDDY //SELECT REPLACE(DEPT, 'itls', 'HR') FROM EMPLOYEES;
    4. REVERSE => SELECT REVERSE ("HELLO WORLD")  // SELECT REVERSE('HELLO');
    5. LENGTH => SLECT LENGTH('HELLO WORLD');
    6. UPPER & LOWER => SELECT UPPPER ('HELLO WORLD');
    7. LEFT, RIGHT => SELECT LEFT('HELLO WORLD', 4);
    8. TRIM => SELECT LENGTH(TRIM('   ALRIGHT   '));
    9. POSITION => SELECT POSITION('OM' IN 'THOMAS');



Exam Q/A :
=========

    TASK 1 :
        1: RAJ:SHARMA:IT 
    TASK 2 :
        1:RAJU SHARMA:IT : 5000
    TASK 3 :
        4:SUMAN:FINANCE
    TASK 4 :
        l1 Raju
        H2 Priya
Exercise  : distinct, order by, like and limit
    1. Find Different type of departments in database?
    2. Display records with Hight-low salary
    3. How to see only top 3 records from a table?
    4. show records where first name start with letter 'A'
    5. Show records where LENGTH of the lname is 4 character
More :
    1. Find total no.of employees in database?
    2. Find no. of employees in each departments
    3. Find lowest salary paying
    4. Find hightest salary paying
    5. FInd total paying in loan department
    6. Average salary paying in each department


section : 08
=============

    ALTER Query 

    01. How to add or remove a column
        ALTer Table contacts
        Add column city varchar(50)

        ALTer Table contacts
        drop column city varchar(50)

        alter table person
        add column age int default 0;

    02. How to rename a column?
        alter table contacts
        rename column name to full_name
    03. How rename a table name?
        Alter table contacts
        rename to myContacts;

        rename table contacts to myContacts;

    04. How to modify a column
        Ex. changing Datatypes
        or adding Default values etc
    05. How to add default value to column?
        alter table person
        alter column fname
        set data type varchar(200)

        alter table person
        alter column fname
        set default 'unknown';

        alter table person
        alter column city
        drop default;

    Constraint CHECK : We want to make sure phone no. is atlest 10 digits..

    create table contacts(
        name varchar(50)
        mob varchar(15) unque check (length(mob) >=10)
    )



    Expression case ==============================
        . case 
            select fname , salary,
            case 
                when salary >= 50000 then 'higt'
                else 'low'
            End as sal_cat
            FROM 
                employees

        select
        case 
            when salary > 45000 then 'High'
            when salary between 40000 and 44000 then 'Mid'
            else 'low'
            end as sal_cat , count(emp_id)
            from employees
            group by sal_cat;


section : 09
=============
    Understand Relationship
        salary  | employees | attendance | requests | offices | TASK
    types of Relationship
        1. One to one
        2. one to many
        3. many to many

    Let's Understand a use-case of 1:many
    
    whar is Foreign key

    Understand join ==

    Inner Join => Returns only the rows where there is a match between the specified columns in both the left (or first) and right (or second) tables.

    Inner Join with Group By

    Left Join => Returns all rows from the left (or first) table and the matching rows from the right (or second) table.

    TASK : 
        Create a one-to-many and many-to-many relationship in a 
        shopping store context using four tables:

        customers
        orders
        products
        order_items
        
        Include a price column in the products table and display the 
        relationship between customers and their orders, along with the 
        details of the products in each order.