===============================================================================================
======================================= PostgreSQL ============================================
===============================================================================================

section : 01
=============
1. What is database?
    --> An organised collection of data, A method to mainpulate and access the data.

2. Database Vs BDMS (PostgreSQL, MySQL, Oracle)

3. What is RDBMS?
    --> A Type of database system that store data instrucred tables (using rows and colums)
        and sQL for manging and querying data

4. SQL Vs PostgreSQL
    --> SQL = structured Query Language which is used to talk to our database

5. Installtion : 
    Password : 3580
    port : 5432

    -01. \list || \l == For check All the database
    -02. |!cls == for clear all database
    -03. create database <name you database> == for create a database
    -04. /c test  === switch database from shell

6. DB vs Schema vs tables





section : 02
=============

    1. Database 
        -> creating , connect , listing, droping
    2.  a. create - new tabale
        b. Read - how to Read
        c. update - data
        d. Delete data
    -05. SELECT datname FROM pg_databse 
    -06. Drop database <db_name>  == for delete existing database
    -07. a. Create a new tables  ================================================//
            => CREATE TABLE person(
                id INT,
                name VACHAER(100),
                city VACHAER(100)
            );

         create table person(id int, name VACHAER(100), city VACHAER(100));
    -08. \d == go to table

    -09.  b. Adding data into a table
            => INSERT INTO person(id , name, city) ================================================//
            INSERT into students values (101, 'raju', 'Dhaka');
    -10. c. Modify /update data from a table
            => UPDATE person ================================================//
                    SET city = 'London'
                    WHERE id = 1;
    -11 d. DELETE data from a table
            => DELETE FROM students ================================================//
                WHERE name = 'Raju';
        


section : 03
=============
    . Datatypes  => An attribute that specifies the type of data in a column of our databse - table
                        . Numeric   - Int Double float decimal
                        . string    - varchar
                        . Data      - DATE 
                        . Boolean   - Boolean
            q/a -- Datatypes = what will happend we store values like 15.35?
                    .DECIMAL(5, 2) -5= Total digit -2= after point two digit
                -- Constraint : A constraint in PostgreSQL is a rule applied to column
                    . the primary key constraint uniquely identifies each record in a table
                    . primary keys must contain UNIQUE values, and cannot contain NULL values
                    . A table can have Only primary key
                -12. -- NOT NULL 
                    => Create table customers ( ================================================//
                        id int not null,
                        name varchar(100) not null
                    )
                -13. DEFAULT values
                    => CREATE TABLE customers (
                        acc_no int primary key,
                        name varchar(100) NOT NULL,
                        acc_type varchar(50) not null Default 'savings'
                    );
                -14. AUTO_increment 
                    => create table employes (
                            emp_id SERIAL primary key,
                            fname varchar(100) NOT NULL,
                            lname varchar(100) NOT NULL,
                            email varchar(100) NOT NULL UNIQUE,
                            dept varcher(100),
                            salary DECIMAL(10,2) DEFAULT 30000.00,
                            hire_date DATE not null deefault current_Date
                        );


    . Constraint
        . Primary key
        . NOT NULL
        . Default
        . Serial
        . Unique

============================( TASK -1 : Create New Table) ===================================
    



section : 04
=============
    . clauses 
        . WHERE
        . Distinct
        . Order By
        . Limit
        . Like

    we have relational operators 
        . < - less than
        . > - Greater than
        . <= - Less than or equal to
        . >= - Greater than or Equal to
        . = Equal to
        . != Not equal to
    Logical operators 
        . AND - both must be true
        . Or - if one correct than return true
    some other operators
        . In (multiple or operators)
        . NOT In (revace in)
    BETWEEN 
        . salary BETWEEN 4000 and 5000
    Distinct    
        . find Unique value
    ORDER By
        . select * from employees order by fname 
        . select * from employees order by fname desc
    LIMIT 
        . select * from employees LIMIT 3;
    LIKE 
        . select * from employees where dept like '%Acc%'
        . Sarts with 'A' : LIKE 'A%'
        . Ends with 'A' : LIKE '%A'
        . Contains 'A' : Like '%A%'
        . second character is 'A' : LIKE '_A%'
        . Case-insensitive contains 'johon' : ILIKE '%johon%'
        . select * from employees where dept like '__';


section : 05
=============
    Aggregate Function => we can calculate

    . How to find total no.of employees
    . Employee with Max salary
    . Average salary of employees

    01. count =>  select count(emp_id) from employees;
    02. sum => select sum(salary) from employees;
    03. Avg => select avg(salary) from employees;
    04. min => select min(salary) from employees;
    05. max => select max(salary) from employees;


section : 06
=============
       What is GROUP BY?

       select dept from employees GROUP BY dept
       select dept , count(fname) from employees GROUP BY dept
       select dept, sum(salary) from employees group by dept;



section : 07
=============
        String Functions
            . CONCAT, CONCAT_WS
            . SUBSTER
            . LEFT, RIGHT
            . LENGTH
            . UPPER, LOWER
            . TRIM, LTRIM, RTRIM
            . REPLACE
            . POSITION
            . STRING_AGG
    1. CONCAT = > CONCAT(FIRST_COL, SEC_COL) // SELECT EMP_ID, CONCAT(FNAME, LNAME) AS FULLNAME , DEPT FROM EMPLOYEES;
    2. SUBSTRING = > SELECT SUBSTRING('HEY BUDDY', 1, 4) //SELECT SUBSTR('HELLO BODY!', 1,6);
    3. REPLACE => HEY BUDDY - HEY=HELLO --> HELLO BUDDY //SELECT REPLACE(DEPT, 'itls', 'HR') FROM EMPLOYEES;
    4. REVERSE => SELECT REVERSE ("HELLO WORLD")  // SELECT REVERSE('HELLO');
    5. LENGTH => SLECT LENGTH('HELLO WORLD');
    6. UPPER & LOWER => SELECT UPPPER ('HELLO WORLD');
    7. LEFT, RIGHT => SELECT LEFT('HELLO WORLD', 4);
    8. TRIM => SELECT LENGTH(TRIM('   ALRIGHT   '));
    9. POSITION => SELECT POSITION('OM' IN 'THOMAS');